name: CI

on:
    push:
        branches: [master]
    pull_request: {}

jobs:
    verify-types:
        name: "Pyright Verify Types"
        runs-on: "ubuntu-latest"

        steps:
            - name: "Checkout repository"
              uses: "actions/checkout@v4"

            - name: Load cached Poetry installation
              id: cached-poetry
              uses: actions/cache@v3
              with:
                  path: ~/.local
                  key: poetry-0

            - name: "Install Poetry"
              if: steps.cached-poetry.outputs.cache-hit != 'true'
              uses: "snok/install-poetry@v1"

            - name: "Install Python 3.12"
              uses: "actions/setup-python@v5"
              with:
                  python-version: "3.12.1"
                  cache: "poetry"

            - name: "Install project"
              run: poetry install --all-extras --no-interaction --no-ansi

            - name: "Run Pyright"
              run: "poetry run pyright --verifytypes pg_purepy --ignoreexternal"

    test-postgresql:
        strategy:
            fail-fast: false
            matrix:
                postgres-version: ["16", "15", "14", "13", "12"]

        name: "Test on PostgreSQL ${{ matrix.postgres-version }}"
        runs-on: ubuntu-latest

        services:
            postgresql:
                image: "postgres:${{ matrix.postgres-version }}"
                env:
                    POSTGRES_USERNAME: "postgres"
                    POSTGRES_PASSWORD: "postgres"
                    POSTGRES_DB: "postgres"

                ports:
                    - 5432

        steps:
            - name: "Checkout repository"
              uses: "actions/checkout@v4"

            - name: Load cached Poetry installation
              id: cached-poetry
              uses: actions/cache@v3
              with:
                  path: ~/.local
                  key: poetry-0

            - name: "Install Poetry"
              if: steps.cached-poetry.outputs.cache-hit != 'true'
              uses: "snok/install-poetry@v1"

            - name: "Install Python 3.12"
              uses: "actions/setup-python@v5"
              with:
                  python-version: "3.12.1"
                  cache: "poetry"

            - name: "Install project"
              run: poetry install --all-extras --no-interaction --no-ansi

            - name: "Run Pytest"
              run: "poetry run pytest -rPx --cov"
              env:
                  POSTGRES_USERNAME: "postgres"
                  POSTGRES_PASSWORD: "postgres"
                  POSTGRES_DATABASE: "postgres"
                  POSTGRES_PORT: "${{ job.services.postgresql.ports[5432] }}"

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v3
              env:
                  CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
